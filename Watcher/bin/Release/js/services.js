// Generated by CoffeeScript 1.6.3
(function() {
  var serverUrl, urls,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.html = {
    root: "		<div id='root' ng-init='setPageHeader(false);initSlideshow()'>			<div class='foreground'>				<img class='iyans-main-logo' src='img/resources/logo@2x.png'></img>				<div class='span12 buttons'>					<div class='button login' ng-click='go(paths.login)'>						<span class='iyans-icon'></span>						<span class='text'>Login</span>					</div>					<div class='button signup' ng-click='go(paths.signup)'>						<span class='text'>Sign Up !</span>					</div>					<span class='copyright-text'>Copyright 2013 IYANS - All Rights Reserved</span>				</div>			</div>			<div class='cycle-slideshow' data-cycle-speed='500' data-timeout='3000'>				<img  height='100%' width='100%' src='img/resources/backgrounds/homepage-background@2x.jpg'></img>				<img height='100%' width='100%' src='img/resources/backgrounds/innerpage-background2@2x.jpg'></img>							</div>		</div>",
    login: "<div id='login' ng-controller='app.controllers.LoginCtrl' ng-init='init();setPageHeader(true, \"Login\", \"left\", {\"name\":\"backButton\",\"backLocation\":\"/root\"})'>\n	<img class='bg-img' height='100%' width='100%' src='img/resources/backgrounds/innerpage-background2@2x.jpg'></img>\n	<div class='foreground'>\n		<div class='form-div'>\n			<form name='loginForm' class='span12 form login'>\n				<div class='span12 field'>\n					<input placeholder=' Username or email' type='text' name='name' ng-model='name'/>\n				</div>\n				<div class='span12 field'> \n					<input placeholder=' Password' type='password' name='password' ng-model='password'/>\n				</div>\n				<div class='span12 buttons'>\n					<div class='button login-submit' ng-click='logIn()'>\n						<div class='text'>Submit</div>\n					</div>\n				</div>\n				<div class='span12 error-div' ng-show='loginErrorShow'>\n					Wrong login or password!\n				</div>\n			</form>\n		</div>\n		<div class='additional-buttons'>\n			<div class='button signup' ng-click='go(paths.signup)'>\n				<div class='text'>Sign up</div>\n			</div>\n		</div>\n	</div>\n</div> ",
    signup: "<div id='signup' ng-controller='app.controllers.SignupCtrl' ng-init='init();setPageHeader(true, \"Registration\", \"left\", {\"name\":\"backButton\",\"backLocation\":\"/root\"})'>\n	<img class='bg-img' height='100%' width='100%' src='img/resources/backgrounds/innerpage-background@2x.jpg'></img>\n	<div class='foreground'>\n		<div class='form-div'>\n			<form name='signupForm' ng-submit='logIn()' class='span12 form login'>\n				<div class='span12'>\n					<div class='span6 field left'> \n						<input placeholder=' First Name' type='text' name='name' ng-model='name'/>\n					</div>\n					<div class='span6 field right'> \n						<input placeholder=' Last Name' type='text' name='surname' ng-model='surname'/>\n					</div>\n				</div>\n				<div class='span12 field'> \n					<input placeholder=' Nickname' type='text' name='nick' ng-model='nick'/>\n				</div>\n				<div class='span12 field'> \n					<input placeholder=' E-mail' type='text' name='email' ng-model='email'/>\n				</div>\n				<div class='span12 field'> \n					<input placeholder=' Password' type='text' name='password' ng-model='password'/>\n				</div>\n				<div class='span12'>\n					<div class='span6 field left birthday'>\n						<input placeholder=' Birthday' type='text' id='signup-datepicker' ng-change='onBirthdayChange()' name='birthday' ng-model='birthday' class=\"input-xlarge\"/>\n\n						<img src='img/resources/common-icons/calander-icon@2x.png' ng-click='showSignupDatepicker()'></img>\n					</div>\n					<div class='span6 field right'>\n						<span>Gender:</span>\n						<span>\n							<input type='radio' name='gender' ng-model='gender' value='male'/>&nbsp;M\n							<input type='radio' name='gender' ng-model='gender' value='female'/>&nbsp;F\n						</span>\n					</div>\n				</div>						\n				<div class='span12 field avatar'>\n					<input type='file' id='avatar-file' name='avatar' onchange='angular.element(this).scope().onAvatarChange(this)' ng-model='avatar'/>\n					<div class=\"input-append\">\n					    <input placeholder=' Upload photo' type=\"text\" name=\"subfile\" id=\"subfile\" class=\"input-xlarge\">\n					    <a class=\"btn\" onclick='$(\"#avatar-file\").click()'>Upload</a>\n					</div>\n				</div>\n				<div class='span12 field'> \n					<textarea placeholder=' Description' name='description' ng-model='description'/>\n				</div>\n				<div class='span12 buttons'>\n					<div class='button signup-submit' ng-click='signUp()'>\n						<div class='text'>REGISTER</div>\n					</div>\n				</div>\n			</form>\n		</div>\n		<div class='additional-buttons'>\n			<div class='button login' ng-click='go(paths.login)'>\n				<div class='text'>Already user? Sign in!</div>\n			</div>\n		</div>\n	</div>\n</div>",
    main: "<div ng-controller='app.controllers.PersonalCtrl' ng-init='setPageHeader(false);init()'>\n	<div class=\"navbar navbar-inverse navbar-fixed-top\">\n	  <div class=\"container\">\n		<div class=\"navbar-header\">\n		  <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n			<span class=\"icon-bar\"></span>\n			<span class=\"icon-bar\"></span>\n			<span class=\"icon-bar\"></span>\n		  </button>\n		  <a class=\"navbar-brand\" ng-click=\"go(paths.myHome)\">iYans</a>\n		</div>\n		<div class=\"collapse navbar-collapse\">\n		  <ul class=\"nav navbar-nav\">\n			<li ng-class=\"tabClass(paths.myHome)\" ng-click=\"go(paths.myHome)\"><a>Home</a></li>\n			<li ng-class=\"tabClass(paths.me)\" ng-click=\"go(paths.me)\"><a>Me</a></li>\n			<li ng-class=\"tabClass(paths.myDash)\" ng-click=\"go(paths.myDash)\"><a>Dashboard</a></li>\n			<li ng-class=\"tabClass(paths.homeFavorites)\" ng-click=\"go(paths.homeFavorites)\"><a>Favorites</a></li>\n			<li ng-class=\"tabClass(paths.notifications)\" ng-click=\"go(paths.notifications)\"><a>Notifications ({{notificationsNumber}})</a></li>\n			<li class='search-users'>\n				<span>Go to user's page:</span>\n				<select id=\"s2_users\">\n					<option ng-repeat='user in anotherUsers' value=\"{{user._id}}\">{{user._id}}</option>\n				</select>\n			</li>\n			<li class='change-current-users'>\n				<span>Logged user:</span>\n				<select id=\"s2_change_user\">\n					<option ng-repeat='user in users' value=\"{{user._id}}\">{{user._id}}</option>\n				</select>\n			</li>\n			<li ng-click='logout()'>\n				<a>Logout</a>\n			</li>\n		  </ul>\n		</div><!--/.nav-collapse -->\n	  </div>\n	</div>\n\n	<div app-view-segment='1'></div>\n</div>",
    home: "<div class=\"main\">\n	<div class='user-data span12'>\n		<div class='user-img'>\n			<img ng-src='{{currentUser.avatar}}' ng-click='currentTabName=\"Home\"'></img>\n			<table class='user-info'>\n				<tr><td><span>Name: {{currentUser.firstName}}</span></td></tr>\n				<tr><td><span>Surname: {{currentUser.lastName}}</span></td></tr>\n				<tr><td><span>Nickname: {{currentUser.username}}</span></td></tr>\n			</table>\n		</div>\n	</div>\n\n	<div app-view-segment='2'></div>\n</div>\n\n	<!-- Modal -->\n<div class=\"modal fade\" id=\"attachFile\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n	<div class=\"modal-dialog\">\n		<div class=\"modal-content\">\n			<div class=\"modal-header\">\n				<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n				<h4>Make picture or video yan</h4>\n				<ul class=\"nav nav-tabs\">\n					<li ng-class='getVideoWayClass(\"upload\")' ng-click=\"setVideoWay('upload')\">\n						<a>Upload</a>\n					</li>\n					<li ng-class='getVideoWayClass(\"capture\")' ng-click=\"setVideoWay('capture')\">\n						<a>Capture</a>\n					</li>\n					<li>\n						<div class='video-name'> Name: <input type='text' ng-change='setNewYanText(newYanTextFromCurrentScope)' ng-model='newYanTextFromCurrentScope'/></div>\n					</li>\n				</ul>		\n			</div>\n			<div class=\"modal-body\">\n				<div class='upload-section centered' ng-show='getVideoWay==\"upload\"'>\n					<input class='upload-input' type=\"file\" accept=\"video/mp4|image/jpg\" onchange=\"angular.element(this).scope().setChosenFile(this)\"/>\n					<div ng-show='parsingVisible'>\n						<p>Parsing... <img width='20' height='20' src='img/loading.gif'></img></p>\n					</div>\n					<div class='preview video-preview' ng-show='videoDuration'>\n						Duration: {{videoDuration}} sec\n					</div>\n					<div class='preview image-preview' ng-show='imageParsed'>\n						<img width='100' height='100'/>\n					</div>\n					<div class='upload-progress' ng-show=\"progressVisible\">\n						<div class=\"percent\">{{progress}}%</div>\n						<div class=\"progress-bar\">\n							<div class=\"uploaded\" ng-style=\"{'width': progress+'%'}\"></div>\n						</div>\n					</div>							\n				</div>\n				<div class='capture-section centered' ng-show='getVideoWay==\"capture\"'>\n					<button type=\"button\" class=\"btn btn-primary\" ng-click='captureVideo()'>Capture video</button>\n					<button type=\"button\" class=\"btn btn-primary\" ng-click='captureImage()'>Capture image</button>\n				</div>\n			</div>\n			<div class=\"modal-footer\">\n				<button type=\"button\" ng-disabled='!file' class=\"btn btn-primary\" ng-click='attachFile()' ng-show='getVideoWay==\"upload\"'>Upload</button>							\n				<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n			</div>\n		</div>\n	</div>\n</div>",
    singleYan: "",
    notifications: "<div class='notifications' ng-controller='app.controllers.NotificationsCtrl' ng-init='init()'>\n<!--	<button ng-click='switchNotificationsView()'>Switch view</button>  -->\n	<div style='color:black'>{{getNotificationsModeName()}}</div>\n	<ul>\n		<li class='notification' ng-repeat='n in notifications' ng-controller='app.controllers.NotificationCtrl'>\n			<div show-notification='{{n}}'></div>\n		</li>\n	</ul>\n</div>",
    homefavorites: "<div class='favorites yans' ng-controller='app.controllers.FavoritesCtrl' ng-init='init()'>\n	<ul class='yans-list span12'>\n		<li ng-repeat='yan in myFavorites' ng-controller='app.controllers.YanCtrl' ng-init='init()'>\n			<div class='yan span12'>\n				<div class='span2'>\n					<img class='yan-img' ng-click='goToAnotherUser(\"{{yan.original_author}}\")' ng-src='{{usersById[yan.original_author].avatar}}'></img>\n				</div>\n				<div class='yan-content span7'>\n					<div class='span12'>\n						<span class=' user-name' ng-click='goToAnotherUser(\"{{yan.original_author}}\")' user-name-format='{{usersById[yan.original_author]}}'>\n						</span> &nbsp;&nbsp;&nbsp;\n						<span ng-show='yan.author!=yan.original_author'>reyaned by <span ng-click='goToAnotherUser(\"{{yan.author}}\")'>@{{usersById[yan.author].username}}</span></span>\n					</div>\n					<div class='span12 yan-text'>\n						<span ng-show='yan.content_type==\"text\"'>{{yan.content}}</span>\n						<span ng-show='yan.content_type==\"video\" || yan.content_type==\"image\"'>{{fileName(yan)}}</span>\n					</div>\n					<div class='span12 yan-video' ng-show='yan.content_type==\"video\"' add-video='{{yan}}'>\n					</div>\n					<div class='span12 yan-image' ng-show='yan.content_type==\"image\"' add-image='{{yan}}'>\n					</div>\n				</div>\n				<div class='span3 buttons'>\n					<p ng-show='yan.content_type==\"text\"'>\n						<button ng-show='!myFavoritesById[yan._id]' ng-click='addFavorite()'>Return Fave</button>\n						<button ng-show='myFavoritesById[yan._id]' ng-click='removeFavorite()' class='remove-button'>Unfave</button>\n						Faved: {{nFavorites}}\n					</p>\n					<p>\n						<button ng-show='currentUser._id!=yan.original_author && !currentUserReyansById[yan._id]' ng-click='addReyan({{yan}})'>Re-yan</button>\n						<button class='remove-button' ng-show='currentUser._id!=yan.original_author && currentUserReyansById[yan._id]' ng-click='removeReyan(\"{{yan._id}}\")'>Remove re-yan</button>\n					</p>\n					<p>Time: <span class='bolder'>{{dateFormat(yan.createdAt)}}</span></p>\n				</div>\n			</div>\n		</li>\n	</ul>\n</div>",
    homeDashboard: "<div class='dashboard span12' ng-controller='app.controllers.DashboardCtrl' ng-init=\"init('currentUser')\">\n	<div class='span6'>\n		<div class='dashboard-follow-text span12'>They follow U:</div>\n		<div class='followers span12'>\n			<ul>\n				<li ng-repeat='f in followers' ng-controller='app.controllers.FollowCtrl' ng-init='init()'>\n					<span ng-click=\"goToAnotherUser('{{f._id}}')\" user-name-format='{{f}}'></span>\n				</li>\n			</ul>\n			<div class='span12 more-load' ng-click=\"moreFollowers()\" ng-click='existMoreFollowers'>More</div>\n		</div>\n	</div>\n	<div class='span6'>					\n		<div class='dashboard-follow-text'>U follow them:</div>\n		<div class='followings'>\n			<ul>\n				<li ng-repeat='f in currentUser.following' ng-controller='app.controllers.FollowCtrl' ng-init='init()'>\n					<span ng-click=\"goToAnotherUser('{{f}}')\" user-name-format='{{usersById[f]}}'></span>\n				</li>\n			</ul>\n		</div>\n	</div>\n</div>",
    attend: "<div class='main anotherUser' ng-controller='app.controllers.UserCtrl' ng-init='init()'>\n	<div class='user-data span12'>\n		<div class='user-img span8'>\n			<img ng-src='{{attendedUser.avatar}}' ng-click='goToAnotherUser(\"{{attendedUser._id}}\")'></img>\n			<table class='user-info'>\n				<tr><td><span>Name: {{attendedUser.firstName}}</span></td></tr>\n				<tr><td><span>Surname: {{attendedUser.lastName}}</span></td></tr>\n				<tr><td><span>Nickname: {{attendedUser.username}}</span></td></tr>\n			</table>\n		</div>\n		<div class='actions span4'>\n			<button ng-show='!isFollowedByCurrentUser()' ng-click='follow()'>Follow</button>\n			<button class='remove-button' ng-show='isFollowedByCurrentUser()' ng-click='unfollow()'>Unfollow</button>\n			<button ng-click=\"go(paths.hisDash)\">Dashboard</button>\n		</div>\n	</div>\n\n	<div app-view-segment='2'></div>\n</div>",
    attendDashboard: "<div class='dashboard span12' ng-controller='app.controllers.DashboardCtrl' ng-init=\"init('attendedUser')\">\n	<div class='span6'>\n		<div class='dashboard-follow-text span12'>They follow <span user-name-format='{{attendedUser}}'></span>:</div>\n		<div class='followers span12'>\n			<ul>\n				<li ng-repeat='f in followers' ng-controller='app.controllers.FollowCtrl' ng-init='init()'>\n					<span ng-click=\"goToAnotherUser('{{f._id}}')\" user-name-format='{{f}}'></span>\n				</li>\n			</ul>\n			<div class='span12 more-load' ng-click=\"moreFollowers()\" ng-click='existMoreFollowers'>More</div>\n		</div>\n	</div>\n	<div class='span6'>\n		<div class='dashboard-follow-text'>Are followed by <span user-name-format='{{attendedUser}}'></span>:</div>\n		<div class='followings'>\n			<ul>\n				<li ng-repeat='f in attendedUser.following' ng-controller='app.controllers.FollowCtrl' ng-init='init()'>\n					<span ng-click=\"goToAnotherUser('{{f}}')\" user-name-format='{{usersById[f]}}'></span>\n				</li>\n			</ul>\n		</div>\n	</div>\n</div>",
    yans: "<div class='yans span12' ng-controller='app.controllers.YansCtrl' ng-init='init()'>\n	<div class='add-yan span12' ng-show='isAtHome()'>\n		<div class='add-yan-label'>What's up to you?</div>\n		<div class='add-yan-text'>\n			<textarea rows='2' cols='50' ng-init='newYanTextFromCurrentScope=newYanText' ng-change='setNewYanText(newYanTextFromCurrentScope)' ng-model='newYanTextFromCurrentScope'></textarea>\n		</div>				\n		<!-- <div class='attachment span12' ng-show='newYanPrepared && newYanPrepared.content_type==\"video\"'>\n			<video id='new-yan-video' class=\"video-js vjs-default-skin\"\n			  controls preload=\"auto\" width=\"270\" height=\"264\"\n			  poster=\"http://video-js.zencoder.com/oceans-clip.png\">\n	 						<source ng-src=\"http://{{newYanPrepared.content.url}}\" type='video/mp4' />\n			</video>\n		</div> -->\n		<button class='btn btn-default' ng-click='addYan(newYanPrepared)' ng-disabled='!newYanText && !newYanPrepared'>Yan!</button>\n		<div class=\"btn-group attach-btn\">\n	<!--    <button class=\"btn btn-default btn-sm dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n				Attach <span class=\"caret\"></span>\n			</button>\n			<ul class=\"dropdown-menu\">\n				<li ng-click=\"attachFileShow()\">\n					<a>Video</a>\n				</li>\n				<li class='divider'></li>\n			</ul>   -->\n			<button type=\"button\" ng-click=\"attachFileShow()\">\n				Attach\n			</button>\n		</div>\n		<div>{{error}}</div>\n	</div>\n	<ul class='yans-list span12'>\n		<li ng-show='!(reyansByOriginalYan[yan._id] && yan.type==\"yan\")' ng-repeat='yan in self[varNameShowedUser()+varNameShowedYans()]' ng-controller='app.controllers.YanCtrl' ng-init='init()'>\n			<div class='yan span12'>\n				<div class='span2'>\n					<img class='yan-img' ng-click='goToAnotherUser(\"{{yan.original_author}}\")' ng-src='{{usersById[yan.original_author].avatar}}'></img>\n				</div>\n				<div class='yan-content span7'>\n					<div class='span12'>\n						<span class=' user-name' ng-click='goToAnotherUser(\"{{yan.original_author}}\")' user-name-format='{{usersById[yan.original_author]}}'>\n						</span> &nbsp;&nbsp;&nbsp;\n						<span ng-show='yan.author!=yan.original_author'>reyaned by <span ng-click='goToAnotherUser(\"{{yan.author}}\")'>@{{usersById[yan.author].username}}</span></span>\n					</div>\n					<div class='span12 yan-text'>\n						<span ng-show='yan.content_type==\"text\"'>{{yan.content}}</span>\n						<span ng-show='yan.content_type==\"video\" || yan.content_type==\"image\"'>{{fileName(yan)}}</span>\n					</div>\n					<div class='span12 yan-video' ng-show='yan.content_type==\"video\"' add-video='{{yan}}'>\n					</div>\n					<div class='span12 yan-image' ng-show='yan.content_type==\"image\"' add-image='{{yan}}'>\n					</div>\n				</div>\n				<div class='span3 buttons'>\n					<p ng-show='yan.content_type==\"text\"'>\n						<button ng-show='!favorites[currentUser._id]' ng-click='addFavorite()'>Fave</button>\n						<button ng-show='favorites[currentUser._id]' ng-click='removeFavorite()' class='remove-button'>Unfave</button>\n						Faved: {{nFavorites}}\n					</p>\n					<p ng-show='yan.content_type!=\"text\"'>\n						<button ng-show='!likes[currentUser._id]' ng-click='addLike()'>Like</button>\n						<button ng-show='likes[currentUser._id]' ng-click='removeLike()' class='remove-button'>Unlike</button>\n						Liked: {{nLikes}}\n					</p>\n					<p>\n						<button class='remove-button' ng-show='yan.original_author==currentUser._id' ng-click='deleteYan()'>Delete</button>\n					</p>\n					<p>\n						<button ng-show='currentUser._id!=yan.original_author && !currentUserReyansById[yan._id]' ng-click='addReyan({{yan}})'>Re-yan</button>\n						<button class='remove-button' ng-show='currentUser._id!=yan.original_author && currentUserReyansById[yan._id]' ng-click='removeReyan(\"{{yan._id}}\")'>Remove re-yan</button>\n					</p>\n					<p>Time: <span class='bolder'>{{dateFormat(yan.createdAt)}}</span></p>\n					<p><div><span class='open-comments' ng-click=\"toggleShowComments()\" ng-show='yan.content_type!=\"text\"'>Comments</span></div></p>\n				</div>\n			</div>\n\n			<div class='comments' ng-show='showComments'>\n				<div class='add-comment-section'>\n					<img class='comment-img' ng-src=\"{{usersById[currentUser._id].avatar}}\"></img>\n					<textarea ng-model='newCommentText'>\n					</textarea>\n					<button ng-click='addComment()'>Comment</button>\n				</div>\n				<ul class='span12 comments-list'>\n					<li class='span12 comment' ng-repeat='c in comments' ng-controller='app.controllers.CommentCtrl' ng-init='init()'>\n						<div class='span2'>\n							<img class='comment-img' ng-src=\"{{usersById[c.author].avatar}}\"></img>\n						</div>\n						<div class='span7 comment-content'>\n							<div>@{{usersById[c.author].username}}</div>\n							<div>\n								{{c.content}}\n							</div>\n						</div>\n						<div class='span3'>\n							<div class='span12 buttons'>\n								<button ng-show='c.author==currentUser._id' ng-click='deleteComment()'>Delete</button>\n							</div>\n							<div class='span12 '>\n								<span class='bolder'>{{dateFormat(c.date)}}</span>\n							</div>\n						</div>\n					</li>\n					<div class='span12 more-load' ng-click=\"moreComments()\" ng-show=\"existMoreComments\">More</div>\n				</ul>\n			</div>\n		</li>\n	</ul>\n	<div class='span12 more-load' ng-click=\"moreYans()\" ng-show=\"self['existMore'+varNameShowedUser()+varNameShowedYans()]\">More</div>\n</div>"
  };

  serverUrl = 'http://iyansserver.herokuapp.com/';

  window.serverUrl = serverUrl;

  urls = {
    getToken: "" + serverUrl + "oauth/token/",
    loginWithToken: "" + serverUrl + "users/id/",
    usersById: "" + serverUrl + "users/ids/",
    userById: function(userId) {
      return "" + serverUrl + "users/" + userId;
    },
    allUsers: "" + serverUrl + "users/",
    addUser: "" + serverUrl + "users/",
    addYan: "" + serverUrl + "yans/",
    getYan: function(yanId) {
      return "" + serverUrl + "yans/" + yanId;
    },
    deleteYan: function(yanId) {
      return "" + serverUrl + "yans/" + yanId + "/";
    },
    allUserHomeYans: function(userId, from, to) {
      return "" + serverUrl + "users/" + userId + "/followyans?from=" + from + "&to=" + to + "/";
    },
    allUserYans: function(userId, from, to) {
      return "" + serverUrl + "users/" + userId + "/all?from=" + from + "&to=" + to + "/";
    },
    allUserReyans: function(userId, from, to) {
      return "" + serverUrl + "users/" + userId + "/reyans?from=" + from + "&to=" + to + "/";
    },
    allUserYansAndReyans: function(userId, from, to) {
      return "" + serverUrl + "users/" + userId + "/allinone?from=" + from + "&to=" + to + "/";
    },
    followUser: function(followedId, byId) {
      return "" + serverUrl + "users/" + followedId + "/follow/" + byId + "/";
    },
    unfollowUser: function(followedId, byId) {
      return "" + serverUrl + "users/" + followedId + "/unfollow/" + byId + "/";
    },
    allUserFollowers: function(userId, from, to) {
      return "" + serverUrl + "users/" + userId + "/followers?from=" + from + "&to=" + to + "/";
    },
    addReyan: function(yanId, userId) {
      return "" + serverUrl + "yans/" + yanId + "/reyaned/" + userId + "/";
    },
    removeReyan: function(yanId) {
      return "" + serverUrl + "yans/" + yanId + "/";
    },
    addComment: function(yanId) {
      return "" + serverUrl + "yans/" + yanId + "/comments/";
    },
    getComments: function(yanId, from, to) {
      return "" + serverUrl + "yans/" + yanId + "/comments?from=" + from + "&to=" + to + "/";
    },
    deleteComment: function(yanId, commentId) {
      return "" + serverUrl + "yans/" + yanId + "/comments/" + commentId + "/";
    },
    numberUsers: "" + serverUrl + "users/count/",
    numberUserFollowers: function(userId) {
      return "" + serverUrl + "users/" + userId + "/followers/count/";
    },
    addFavorite: function(yanId, userId) {
      return "" + serverUrl + "yans/" + yanId + "/favorited/" + userId;
    },
    removeFavorite: function(yanId, userId) {
      return "" + serverUrl + "yans/" + yanId + "/favorited/" + userId;
    },
    numberYanFavourites: function(yanId) {
      return "" + serverUrl + "yans/" + yanId + "/favorited/count";
    },
    getYanFavorites: function(yanId) {
      return "" + serverUrl + "yans/" + yanId + "/favorited";
    },
    getUserFavorites: function(userId, from, to) {
      return "" + serverUrl + "users/" + userId + "/favorites?from=" + from + "&to=" + to;
    },
    addLike: function(yanId, userId) {
      return "" + serverUrl + "yans/" + yanId + "/like/" + userId;
    },
    removeLike: function(yanId, userId) {
      return "" + serverUrl + "yans/" + yanId + "/like/" + userId;
    },
    numberYanLikes: function(yanId) {
      return "" + serverUrl + "yans/" + yanId + "/like/count";
    },
    readNotification: function(userId) {
      return "" + serverUrl + "users/" + userId + "/notifications/";
    },
    allUserNotifications: function(userId, from, to) {
      return "" + serverUrl + "users/" + userId + "/notifications?from=" + from + "&to=" + to + "/";
    },
    pendingUserNotifications: function(userId, from, to) {
      return "" + serverUrl + "users/" + userId + "/notifications/pending?from=" + from + "&to=" + to + "/";
    },
    deleteNotification: function(userId, notificationId) {
      return "" + serverUrl + "users/" + userId + "/notifications/" + notificationId + "/";
    },
    numberPendingUserNotifications: function(userId) {
      return "" + serverUrl + "users/" + userId + "/notifications/pending/count";
    }
  };

  window.paths = {
    myHome: '/main/home/myhome',
    me: '/main/home/me',
    myDash: '/main/home/mydashboard',
    hisHome: '/main/attend/attendhome',
    hisDash: 'main/attend/attenddashboard',
    homeFavorites: '/main/home/homefavorites',
    notifications: '/main/home/notifications',
    root: '/root',
    login: '/login',
    signup: '/signup',
    singleYan: function(yanId) {
      return "/main/home/singleYan/" + yanId;
    }
  };

  window.namespace = function(path, callback) {
    var place, token, tokens, _i, _len;
    tokens = path.split('.');
    place = window;
    for (_i = 0, _len = tokens.length; _i < _len; _i++) {
      token = tokens[_i];
      if (place[token] == null) {
        place[token] = {
          parent: place
        };
      }
      place = place[token];
    }
    return callback.call(place);
  };

  window.namespace('app', function() {
    var Services;
    window.favorites = {
      byUser: {},
      byYan: {}
    };
    window.likes = {
      byUser: {},
      byYan: {}
    };
    window.notifications = {};
    Services = (function() {
      var _this = this;

      function Services(rootScope, q, http, resource) {
        this.rootScope = rootScope;
        this.q = q;
        this.http = http;
        this.resource = resource;
        this.httpRequest = __bind(this.httpRequest, this);
        this.xhrRequest = __bind(this.xhrRequest, this);
        this.fakeRequest = __bind(this.fakeRequest, this);
        this.NumberPendingUserNotifications = __bind(this.NumberPendingUserNotifications, this);
        this.DeleteNotification = __bind(this.DeleteNotification, this);
        this.PendingUserNotifications = __bind(this.PendingUserNotifications, this);
        this.AllUserNotifications = __bind(this.AllUserNotifications, this);
        this.ReadNotification = __bind(this.ReadNotification, this);
        this.NumberYanLikes = __bind(this.NumberYanLikes, this);
        this.RemoveLike = __bind(this.RemoveLike, this);
        this.AddLike = __bind(this.AddLike, this);
        this.GetUserFavorites = __bind(this.GetUserFavorites, this);
        this.GetYanFavorites = __bind(this.GetYanFavorites, this);
        this.NumberYanFavourites = __bind(this.NumberYanFavourites, this);
        this.RemoveFavorite = __bind(this.RemoveFavorite, this);
        this.AddFavorite = __bind(this.AddFavorite, this);
        this.AttachFile = __bind(this.AttachFile, this);
        this.NumberUserFollowers = __bind(this.NumberUserFollowers, this);
        this.NumberUsers = __bind(this.NumberUsers, this);
        this.DeleteComment = __bind(this.DeleteComment, this);
        this.GetComments = __bind(this.GetComments, this);
        this.AddComment = __bind(this.AddComment, this);
        this.RemoveReyan = __bind(this.RemoveReyan, this);
        this.AddReyan = __bind(this.AddReyan, this);
        this.AllUserFollowers = __bind(this.AllUserFollowers, this);
        this.UnfollowUser = __bind(this.UnfollowUser, this);
        this.FollowUser = __bind(this.FollowUser, this);
        this.AllUserYansAndReyans = __bind(this.AllUserYansAndReyans, this);
        this.AllUserReyans = __bind(this.AllUserReyans, this);
        this.AllUserYans = __bind(this.AllUserYans, this);
        this.AllUserHomeYans = __bind(this.AllUserHomeYans, this);
        this.DeleteYan = __bind(this.DeleteYan, this);
        this.GetYan = __bind(this.GetYan, this);
        this.AddYan = __bind(this.AddYan, this);
        this.AddUser = __bind(this.AddUser, this);
        this.AllUsers = __bind(this.AllUsers, this);
        this.UserById = __bind(this.UserById, this);
        this.UsersById = __bind(this.UsersById, this);
        this.LoginWithToken = __bind(this.LoginWithToken, this);
        this.RefreshToken = __bind(this.RefreshToken, this);
        this.GetToken = __bind(this.GetToken, this);
      }

      Services.prototype.GetToken = function(data) {
        return this.httpRequest('post', urls.getToken, {
          grant_type: "password",
          client_id: "mobileV1",
          client_secret: "secret123456",
          username: data.username,
          password: data.password
        });
      };

      Services.prototype.RefreshToken = function(data) {
        return this.httpRequest('post', urls.getToken, {
          "grant_type": "refresh_token",
          "client_id": "mobileV1",
          "client_secret": "secret123456",
          "refresh_token": data.refresh_token
        });
      };

      Services.prototype.LoginWithToken = function(token) {
        return this.httpRequest('post', urls.loginWithToken, {
          access_token: token
        });
      };

      Services.prototype.UsersById = function(ids) {
        return this.httpRequest('post', urls.usersById, {
          ids: ids,
          access_token: window.accessToken
        });
      };

      Services.prototype.UserById = function(id) {
        return this.httpRequest('get', urls.userById(id), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AllUsers = function() {
        return this.httpRequest('get', urls.allUsers, {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AddUser = function(data) {
        return this.xhrRequest('post', urls.addUser, _.extend(data, {
          access_token: window.accessToken
        }));
      };

      Services.prototype.AddYan = function(data) {
        return this.httpRequest('post', urls.addYan, _.extend(data, {
          access_token: window.accessToken
        }));
      };

      Services.prototype.GetYan = function(data) {
        return this.httpRequest('get', urls.getYan(data.yanId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.DeleteYan = function(yanId) {
        return this.httpRequest('delete', urls.deleteYan(yanId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AllUserHomeYans = function(data) {
        return this.httpRequest('get', urls.allUserHomeYans(data.userId, data.range.from, data.range.to), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AllUserYans = function(data) {
        return this.httpRequest('get', urls.allUserYans(data.userId, data.range.from, data.range.to), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AllUserReyans = function(data) {
        return this.httpRequest('get', urls.allUserReyans(data.userId, data.range.from, data.range.to), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AllUserYansAndReyans = function(data) {
        return this.httpRequest('get', urls.allUserYansAndReyans(data.userId, data.range.from, data.range.to), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.FollowUser = function(data) {
        return this.httpRequest('put', urls.followUser(data.followedId, data.byId), {
          access_token: window.accessToken
        });
      };

      Services.prototype.UnfollowUser = function(data) {
        return this.httpRequest('delete', urls.unfollowUser(data.followedId, data.byId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AllUserFollowers = function(data) {
        return this.httpRequest('get', urls.allUserFollowers(data.userId, data.range.from, data.range.to), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AddReyan = function(data) {
        return this.httpRequest('put', urls.addReyan(data.yanId, data.userId), {
          access_token: window.accessToken
        });
      };

      Services.prototype.RemoveReyan = function(data) {
        return this.httpRequest('delete', urls.removeReyan(data.yanId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AddComment = function(data) {
        return this.httpRequest('post', urls.addComment(data.yanId), _.extend(data.data, {
          access_token: window.accessToken
        }));
      };

      Services.prototype.GetComments = function(data) {
        return this.httpRequest('get', urls.getComments(data.yanId, data.range.from, data.range.to), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.DeleteComment = function(data) {
        return this.httpRequest('delete', urls.deleteComment(data.yanId, data.commentId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.NumberUsers = function() {
        return this.httpRequest('get', urls.numberUsers, {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.NumberUserFollowers = function(userId) {
        return this.httpRequest('get', urls.numberUserFollowers(userId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AttachFile = function(data) {
        return this.xhrRequest('post', urls.addYan, data);
      };

      Services.prototype.AddFavorite = function(data) {
        return this.httpRequest('put', urls.addFavorite(data.yanId, data.userId), {
          access_token: window.accessToken
        });
      };

      Services.prototype.RemoveFavorite = function(data) {
        return this.httpRequest('delete', urls.removeFavorite(data.yanId, data.userId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.NumberYanFavourites = function(data) {
        return this.httpRequest('get', urls.numberYanFavourites(data.yanId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.GetYanFavorites = function(data) {
        return this.httpRequest('get', urls.getYanFavorites(data.yanId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.GetUserFavorites = function(data) {
        return this.httpRequest('get', urls.getUserFavorites(data.userId, data.range.from, data.range.to), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.AddLike = function(data) {
        return this.httpRequest('put', urls.addLike(data.yanId, data.userId), _.extend(data, {
          access_token: window.accessToken
        }));
      };

      Services.prototype.RemoveLike = function(data) {
        return this.httpRequest('delete', urls.removeLike(data.yanId, data.userId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.NumberYanLikes = function(data) {
        return this.httpRequest('get', urls.numberYanLikes(data.yanId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.ReadNotification = function(data) {
        return this.httpRequest('put', urls.readNotification(data.userId), _.extend(data.notification, {
          access_token: window.accessToken
        }));
      };

      Services.prototype.AllUserNotifications = function(data) {
        return this.httpRequest('get', urls.allUserNotifications(data.userId, data.range.from, data.range.to), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.PendingUserNotifications = function(data) {
        return this.httpRequest('get', urls.pendingUserNotifications(data.userId, data.range.from, data.range.to), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.DeleteNotification = function(data) {
        return this.httpRequest('delete', urls.deleteNotification(data.userId, data.notificationId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.NumberPendingUserNotifications = function(data) {
        return this.httpRequest('get', urls.numberPendingUserNotifications(data.userId), {
          params: {
            access_token: window.accessToken
          }
        });
      };

      Services.prototype.fakeRequest = function(type, url, data) {
        var deferred,
          _this = this;
        deferred = this.q.defer();
        this.fakeHttp[url](data, function(response) {
          return setTimeout(function() {
            if (!response.error) {
              return deferred.resolve(response.data);
            } else {
              return deferred.reject(response.error);
            }
          }, 500);
        });
        return deferred.promise;
      };

      Services.prototype.fakeHttp = {
        addNotification: function(data, callback) {
          var id, newNotification, response, _ref;
          id = (new Date).getTime();
          newNotification = {
            content: data.content,
            _id: id,
            userId: data.userId,
            fromUserId: data.fromUserId,
            datetime: new Date
          };
          response = {
            data: newNotification,
            error: false
          };
          if (((_ref = window.notifications[data.userId]) != null ? _ref[id] : void 0) == null) {
            if (window.notifications[data.userId] == null) {
              window.notifications[data.userId] = {};
            }
            window.notifications[data.userId][id] = newNotification;
          } else {
            response.error = 'Already exists';
          }
          return callback(response);
        },
        readNotification: function(data, callback) {
          var response;
          response = {
            error: false
          };
          delete window.notifications[data.userId][data.notificationId];
          return callback(response);
        },
        allUserNotifications: function(data, callback) {
          var response;
          response = {
            data: window.notifications[data.userId] || {},
            error: false
          };
          return callback(response);
        },
        addFavorite: function(data, callback) {
          var response, _ref;
          response = {
            data: data,
            error: false
          };
          if (((_ref = window.favorites.byUser[data.userId]) != null ? _ref[data.yanId] : void 0) == null) {
            if (window.favorites.byUser[data.userId] == null) {
              window.favorites.byUser[data.userId] = {};
            }
            window.favorites.byUser[data.userId][data.yanId] = data;
            if (window.favorites.byYan[data.yanId] == null) {
              window.favorites.byYan[data.yanId] = {};
            }
            window.favorites.byYan[data.yanId][data.userId] = data;
          } else {
            response.error = 'Already exists';
          }
          return callback(response);
        },
        removeFavorite: function(data, callback) {
          var response;
          response = {
            error: false
          };
          delete window.favorites.byUser[data.userId][data.yanId];
          delete window.favorites.byYan[data.yanId][data.userId];
          return callback(response);
        },
        getYanFavorites: function(data, callback) {
          var response;
          response = {
            data: window.favorites.byYan[data.yanId] || {},
            error: false
          };
          return callback(response);
        },
        getUserFavorites: function(data, callback) {
          var response;
          response = {
            data: window.favorites.byUser[data.userId] || {},
            error: false
          };
          return callback(response);
        },
        addLike: function(data, callback) {
          var response, _ref;
          response = {
            data: data,
            error: false
          };
          if (((_ref = window.likes.byUser[data.userId]) != null ? _ref[data.yanId] : void 0) == null) {
            if (window.likes.byUser[data.userId] == null) {
              window.likes.byUser[data.userId] = {};
            }
            window.likes.byUser[data.userId][data.yanId] = data;
            if (window.likes.byYan[data.yanId] == null) {
              window.likes.byYan[data.yanId] = {};
            }
            window.likes.byYan[data.yanId][data.userId] = data;
          } else {
            response.error = 'Already exists';
          }
          return callback(response);
        },
        removeLike: function(data, callback) {
          var response;
          response = {
            error: false
          };
          delete window.likes.byUser[data.userId][data.yanId];
          delete window.likes.byYan[data.yanId][data.userId];
          return callback(response);
        },
        getYanLikes: function(data, callback) {
          var response;
          response = {
            data: window.likes.byYan[data.yanId] || {},
            error: false
          };
          return callback(response);
        }
      };

      Services.prototype.xhrRequest = function(type, url, data) {
        var deferred, form, k, v, xhr, _ref,
          _this = this;
        deferred = this.q.defer();
        form = new FormData;
        _ref = data.params;
        for (k in _ref) {
          v = _ref[k];
          form.append(k, v);
        }
        xhr = new XMLHttpRequest;
        xhr.upload.onprogress = data.progress;
        xhr.onload = function() {
          return deferred.resolve(JSON.parse(xhr.response));
        };
        xhr.onerror = function() {
          return deferred.reject(JSON.parse(xhr.response));
        };
        xhr.onabort = null;
        xhr.open(type, url);
        xhr.send(form);
        return deferred.promise;
      };

      Services.prototype.httpRequest = function(type, url, data) {
        var deferred,
          _this = this;
        deferred = this.q.defer();
        this.http[type](url, data).success(function(response) {
          if (!(response.error || response === 'Unauthorized')) {
            return deferred.resolve(response);
          } else {
            return deferred.reject(response.message);
          }
        });
        return deferred.promise;
      };

      return Services;

    }).call(this);
    return this.services = function(rootScope, q, http, resource) {
      window.http = http;
      window.resource = resource;
      return (function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor, result = func.apply(child, args);
        return Object(result) === result ? result : child;
      })(Services, arguments, function(){});
    };
  });

  window.namespace('app', function() {
    var _this = this;
    return this.makeRequest = function(service, data, onSuccess, onError) {
      return service.get(data).then(onSuccess, onError);
    };
  });

  window.namespace('app', function() {
    var Helpers, PagesHelper;
    PagesHelper = (function() {
      function PagesHelper(from, to) {
        this.from = from;
        this.to = to;
        if (this.from == null) {
          this.from = 1;
        }
        if (this.to == null) {
          this.to = 10;
        }
      }

      PagesHelper.prototype.range = function() {
        return this.to - this.from + 1;
      };

      PagesHelper.prototype["default"] = function() {
        this.from = 1;
        return this.to = 10;
      };

      PagesHelper.prototype.shift = function(n) {
        this.from += n;
        return this.to += n;
      };

      return PagesHelper;

    })();
    Helpers = (function() {
      function Helpers() {
        this.setCookie = __bind(this.setCookie, this);
        this.getCookie = __bind(this.getCookie, this);
        this.objLen = __bind(this.objLen, this);
        this.ext = __bind(this.ext, this);
        this.exclude = __bind(this.exclude, this);
        this.include = __bind(this.include, this);
        this.pagesHelper = __bind(this.pagesHelper, this);
      }

      Helpers.prototype.pagesHelper = function() {
        return (function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor, result = func.apply(child, args);
          return Object(result) === result ? result : child;
        })(PagesHelper, arguments, function(){});
      };

      Helpers.prototype.arrayOfValuesToObject = function(array) {
        var obj, val, _i, _len;
        if (array == null) {
          return {};
        }
        obj = {};
        for (_i = 0, _len = array.length; _i < _len; _i++) {
          val = array[_i];
          obj[val] = val;
        }
        return obj;
      };

      Helpers.prototype.arrayToObject = function(array, key) {
        var elem, obj, _i, _len;
        if (array == null) {
          return {};
        }
        obj = {};
        for (_i = 0, _len = array.length; _i < _len; _i++) {
          elem = array[_i];
          obj[elem[key]] = elem;
        }
        return obj;
      };

      Helpers.prototype.arrayToObjectOfArray = function(array, key) {
        var elem, obj, _i, _len;
        if (array == null) {
          return {};
        }
        obj = {};
        for (_i = 0, _len = array.length; _i < _len; _i++) {
          elem = array[_i];
          if (obj[elem[key]] == null) {
            obj[elem[key]] = [];
          }
          obj[elem[key]].push(elem);
        }
        return obj;
      };

      Helpers.prototype.objectToArray = function(obj) {
        var array, k, v;
        if (obj == null) {
          return [];
        }
        array = [];
        for (k in obj) {
          v = obj[k];
          array.push(v);
        }
        return array;
      };

      Helpers.prototype.removeFromArrayOfObjectsWhere = function(arr, key, value) {
        var elem, i, index, _i, _len;
        if (arr == null) {
          return [];
        }
        index = null;
        for (i = _i = 0, _len = arr.length; _i < _len; i = ++_i) {
          elem = arr[i];
          if (elem[key] === value) {
            index = i;
          }
        }
        if (index != null) {
          arr.splice(index, 1);
        }
        return arr;
      };

      Helpers.prototype.dateToYMDTime = function(d) {
        var date, doubleDigits, h, m, min, sec, y;
        if (d == null) {
          return;
        }
        date = new Date(d);
        if (typeof d === "string" && (isNaN(date.getTime()) || /^\d{2}\/\d{2}\/\d{4}$/.test(d))) {
          return d;
        }
        d = date.getDate();
        m = date.getMonth() + 1;
        y = date.getFullYear();
        h = date.getHours();
        min = date.getMinutes();
        sec = date.getSeconds();
        doubleDigits = function(n) {
          return "" + (n <= 9 ? '0' + n : n);
        };
        return "" + y + "/" + (doubleDigits(m)) + "/" + (doubleDigits(d)) + " | " + (doubleDigits(h)) + ":" + (doubleDigits(min)) + ":" + (doubleDigits(sec));
      };

      Helpers.prototype.include = function(scope, names, obj, pages) {
        var _this = this;
        return scope.tryApply(function() {
          var i, name, _i, _len, _results;
          _results = [];
          for (i = _i = 0, _len = names.length; _i < _len; i = ++_i) {
            name = names[i];
            if (scope["" + name + "ById"] == null) {
              continue;
            }
            if (scope["" + name + "ById"][obj._id] != null) {
              continue;
            }
            scope[name] = [obj].concat(scope[name]);
            scope["" + name + "ById"][obj._id] = obj;
            _results.push(pages[i].shift(1));
          }
          return _results;
        });
      };

      Helpers.prototype.exclude = function(scope, names, obj, pages) {
        var self,
          _this = this;
        self = this;
        return scope.tryApply(function() {
          var i, name, _i, _len, _results;
          _results = [];
          for (i = _i = 0, _len = names.length; _i < _len; i = ++_i) {
            name = names[i];
            if (!scope[name]) {
              continue;
            }
            scope[name] = self.removeFromArrayOfObjectsWhere(scope[name], '_id', obj._id);
            delete scope["" + name + "ById"][obj._id];
            _results.push(pages[i].shift(-1));
          }
          return _results;
        });
      };

      Helpers.prototype.ext = function(str) {
        return str.match(/\.([^\.]+)$/)[1];
      };

      Helpers.prototype.objLen = function(obj) {
        var k, n, v;
        n = 0;
        for (k in obj) {
          v = obj[k];
          n++;
        }
        return n;
      };

      Helpers.prototype.getCookie = function(name) {
        var matches;
        matches = document.cookie.match(new RegExp("(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"));
        if (matches) {
          return decodeURIComponent(matches[1]);
        } else {
          return null;
        }
      };

      Helpers.prototype.setCookie = function(name, value, options) {
        var d, expires, propName, propValue, updatedCookie;
        options = options || {};
        expires = options.expires;
        if (typeof expires === "number" && expires) {
          d = new Date();
          d.setTime(d.getTime() + expires * 1000);
          expires = options.expires = d;
        }
        if (expires && expires.toUTCString) {
          options.expires = expires.toUTCString();
        }
        value = encodeURIComponent(value);
        updatedCookie = name + "=" + value;
        for (propName in options) {
          propValue = options[propName];
          updatedCookie += "; " + propName;
          propValue = options[propName];
          if (propValue !== true) {
            updatedCookie += "=" + propValue;
          }
        }
        return document.cookie = updatedCookie;
      };

      return Helpers;

    })();
    return this.helpers = (function() {
      return (function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor, result = func.apply(child, args);
        return Object(result) === result ? result : child;
      })(Helpers, arguments, function(){});
    })();
  });

}).call(this);
